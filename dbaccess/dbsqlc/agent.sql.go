// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: agent.sql

package dbsqlc

import (
	"context"
)

const agentInsert = `-- name: AgentInsert :one
INSERT INTO agents(
    name,
    queue_id,
    metadata
) VALUES (
    $1::text,
    $2::bigint,
    coalesce($3::jsonb, '{}')
) RETURNING id, name, queue_id, created_at, metadata, updated_at
`

type AgentInsertParams struct {
	Name     string
	QueueID  int64
	Metadata []byte
}

func (q *Queries) AgentInsert(ctx context.Context, db DBTX, arg *AgentInsertParams) (*Agent, error) {
	row := db.QueryRow(ctx, agentInsert, arg.Name, arg.QueueID, arg.Metadata)
	var i Agent
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.QueueID,
		&i.CreatedAt,
		&i.Metadata,
		&i.UpdatedAt,
	)
	return &i, err
}
